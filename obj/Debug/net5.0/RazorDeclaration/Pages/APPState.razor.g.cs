// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace OWFBlazorDemo.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using OWFBlazorDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\home\development\blazer\OWFBlazorDemo\_Imports.razor"
using OWFBlazorDemo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\home\development\blazer\OWFBlazorDemo\Pages\APPState.razor"
using OWFBlazorDemo.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/appState")]
    public partial class APPState : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 35 "E:\home\development\blazer\OWFBlazorDemo\Pages\APPState.razor"
       
    public class MyListObject
    {
        public string Value { get; set; }
    }
    public MyListObject MyList = new MyListObject();
    private string text = "";

    protected override async Task OnInitializedAsync()
    {
        if (AppState == null)
        {
            System.Console.WriteLine("App State is NULL");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
        }
    }

    public APPState()
    {
    }

    private async Task onAddList()
    {
        // adding one value
        AppState.add("MyList", MyList.Value);
        onListAll();
    }

    private async Task onAddListFromList() {
        // adding multiple values, comma separated
        AppState.add("MyList", (MyList.Value).Split(",").ToList<string>());
        onListAll();
    }
    private async Task onSubtractList() {
        // subtracting one value
        AppState.subtract("MyList", MyList.Value);
        onListAll();
    }
    private async Task onSubtractListPartial() {
        // subtracting one value
        AppState.subtract("MyList", MyList.Value, true);
        onListAll();
    }
    private async Task onSubtractListFromList() {
        // subtracting multiple values, comma separated
        AppState.subtract("MyList", (MyList.Value).Split(",").ToList<string>());
        onListAll();
    }
    private async Task onCheckList() {
        // check one value
        onListAll();

        bool checkResult = AppState.check("MyList", MyList.Value);
        text += "<br />(check) -> " + checkResult.ToString();
        base.StateHasChanged();
    }
    private async Task onCheckListPartial() {
        // check one value (partial)
        onListAll();
        bool checkResult = AppState.check("MyList", MyList.Value, true);
        text += "<br />(check) -> " + checkResult.ToString();
        base.StateHasChanged();
    }
    private async Task onCheckListFromListMatched() {
        // check multiple values, comma separated (all exist)
        onListAll();
        bool checkResult = AppState.check("MyList", (MyList.Value).Split(",").ToList<string>(), true);
        text += "<br />(check) -> " + checkResult.ToString();
        base.StateHasChanged();
    }
    private async Task onCheckListFromList() {
        // check multiple values, comma separated (any exist)
        onListAll();
        bool checkResult = AppState.check("MyList", (MyList.Value).Split(",").ToList<string>());
        text += "<br />(check) -> " + checkResult.ToString();
        base.StateHasChanged();
    }
    private async Task onListAll() {
        text = "(list) -> " + string.Join(",", (AppState.list("MyList")).Select(x => x.ToString()).ToArray());
        base.StateHasChanged();
    }
    private async Task onList() {
        onListAll();
        text += "<br />(result) -> " + string.Join(",", AppState.list("MyList", MyList.Value).Select(x => x.ToString()).ToArray());
        base.StateHasChanged();
    }
    private async Task onListPartial() {
        onListAll();
        text += "<br />(result) -> " + string.Join(",", AppState.list("MyList", MyList.Value, true).Select(x => x.ToString()).ToArray());
        base.StateHasChanged();
    }
    private async Task onListFromListMatched() {
        onListAll();
        text += "<br />(result) -> " + string.Join(",", (AppState.list("MyList", (MyList.Value).Split(",").ToList<string>())).Select(x => x.ToString()).ToArray());
        base.StateHasChanged();
    }
    private async Task onListFromList() {
        onListAll();
        text += "<br />(result) -> " + string.Join(",", (AppState.list("MyList", (MyList.Value).Split(",").ToList<string>(), false)).Select(x => x.ToString()).ToArray());
        base.StateHasChanged();
    }

    async void IDisposable.Dispose()
    {
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private OWFBlazorDemo.Services.AppState AppState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
    }
}
#pragma warning restore 1591
